// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Interactable renders interactable component with all props 1`] = `
.c0 {
  border-top-left-radius: 0.4rem;
  border-bottom-right-radius: 0;
  display: block;
  width: 100%;
  color: inherit;
  opacity: 0.5;
  pointer-events: none;
}

.c0:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0:disabled {
  opacity: 0.5;
  pointer-events: none;
}

.c1 {
  background-color: rgba(255,255,255,0.2);
  background-color: #9147ff;
  color: #ffffff;
}

.c1:hover {
  color: #ffffff;
}

.c1:hover {
  background-color: #9147ff;
  color: #ffffff;
}

<ForwardRef(Interactable)
  borderRadius={
    Object {
      "bottomRight": "border-radius-none",
      "topLeft": "border-radius-medium",
    }
  }
  disabled={true}
  hover={true}
  linkTo="/"
  onClick={[MockFunction]}
  selected={true}
  tabIndex={0}
  targetBlank={true}
  title="test title"
  variant="alpha"
>
  <Styled(Styled(Component))
    $disabled={true}
    $hoverForced={true}
    $selected={true}
    borderRadius={
      Object {
        "bottomRight": "border-radius-none",
        "topLeft": "border-radius-medium",
      }
    }
    className="tw-interactable"
    disabled={true}
    linkTo="/"
    onClick={[MockFunction]}
    tabIndex={0}
    targetBlank={true}
    title="test title"
  >
    <ForwardRef(CoreInteractive)
      className="c0 c1 tw-interactable"
      disabled={true}
      linkTo="/"
      onClick={[MockFunction]}
      tabIndex={0}
      targetBlank={true}
      title="test title"
    >
      <button
        className="c0 c1 tw-interactable"
        disabled={true}
        onClick={[MockFunction]}
        tabIndex={0}
        title="test title"
      />
    </ForwardRef(CoreInteractive)>
  </Styled(Styled(Component))>
</ForwardRef(Interactable)>
`;

exports[`Interactable renders interactable component with required props 1`] = `
.c0 {
  display: block;
  width: 100%;
  color: inherit;
}

.c0:hover {
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c0:disabled {
  opacity: 0.5;
  pointer-events: none;
}

.c1:hover {
  color: inherit;
}

.c1:hover {
  background-color: rgba(255,255,255,0.2);
}

.c1[data-focus-visible-added] {
  background-color: rgba(255,255,255,0.2);
}

.c1:active {
  background-color: rgba(255,255,255,0.15);
}

.c1:hover:active {
  background-color: rgba(255,255,255,0.15);
}

<ForwardRef(Interactable)>
  <Styled(Styled(Component))
    $hoverForced={false}
    className="tw-interactable"
  >
    <ForwardRef(CoreInteractive)
      className="c0 c1 tw-interactable"
    >
      <button
        className="c0 c1 tw-interactable"
      />
    </ForwardRef(CoreInteractive)>
  </Styled(Styled(Component))>
</ForwardRef(Interactable)>
`;
